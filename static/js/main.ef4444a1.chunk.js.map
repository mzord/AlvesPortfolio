{"version":3,"sources":["images/download.png","component/Header/Header.js","component/MenuButton/MenuButton.js","component/SideMenu/SideMenu.js","component/Body/Body.js","component/AboutMe/AboutMe.js","component/SubmitButton/SubmitButton.js","component/ContactMe/ContactMe.js","component/Projects/Projects.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","props","react_default","a","createElement","className","id","date","Date","year","getFullYear","month","getMonth","day","getDate","age","getMyAge","align","alt","src","require","MenuButton","path","link","d","SvgIcon","children","SideMenu","react_router_dom","to","component_MenuButton_MenuButton","Body","AboutMe","_useState","useState","_useState2","Object","slicedToArray","command","setCommand","Typist_default","cursor","blink","element","hideWhenDone","onTypingDone","startDelay","stdTypingDelay","avgTypingDelay","show","href","target","rel","SubmitButton","clicked","setClicked","class_name","appear","push","join","onClick","type","ContactMe","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleEmailChange","event","setState","email","value","handleNameChange","name","handleMessageChange","message","state","renderForm","submitappear","sent","handleSubmit","bind","assertThisInitialized","preventDefault","user","username","process","password","options","method","headers","Content-Type","Access-Control-Allow-Origin","mode","body","JSON","stringify","fetch","auth","json","auth_response","access_token","token","contact_options","Authorization","_this2","form","onChange","defaultValue","component_SubmitButton_SubmitButton","onSubmit","React","Component","Projects","App","component_Header_Header","component_SideMenu_SideMenu","component_Body_Body","react_router","render","_ref","location","TransitionGroup","CSSTransition","key","timeout","classNames","exact","component","Boolean","window","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ef4444a1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/download.eaabf717.png\";","import React from 'react'\nimport './Header.scss'\n\nconst getMyAge = () => {\n    var date = new Date()\n    let year = date.getFullYear()\n    let month = date.getMonth() + 1\n    let day = date.getDate()\n    let age = year - 1992 - 1\n    if (month === 12 && day >= 2) {\n        age += 1\n    }\n    return age\n}\n\nconst Header = (props) => (\n    <div className=\"header\">\n        <div className=\"headerBackground\" >\n            <div className=\"myInfo\">\n                <ul>\n                    <li><code>Name: <b id=\"myName\">Pedro Alves</b></code></li>\n                    <li><code>Age: {getMyAge()} </code></li>\n                    <li><code>Nationality: Brazilian</code></li>\n                </ul>\n            </div>\n            <div className=\"title\">\n                <h1>Full-Stack Web Developer</h1>\n            </div>\n        </div>\n        <div className=\"image\">\n            <img align=\"middle\" alt=\"Pedro Alves face\" src={require(\"../../images/download.png\")} />\n        </div>\n    </div>\n)\n\nexport default Header","import React from 'react'\nimport SvgIcon from '@material-ui/core/SvgIcon'\nimport './MenuButton.scss'\n\nconst MenuButton = (props) => {\n    var path = \"\"\n    switch (props.link) {\n        case \"aboutme\":\n            path = <path d=\"M12,19.2C9.5,19.2 7.29,17.92 6,16C6.03,14 10,12.9 12,12.9C14,12.9 17.97,14 18,16C16.71,17.92 14.5,19.2 12,19.2M12,5A3,3 0 0,1 15,8A3,3 0 0,1 12,11A3,3 0 0,1 9,8A3,3 0 0,1 12,5M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12C22,6.47 17.5,2 12,2Z\" /> \n            break\n        case \"projects\":\n            path = <path d=\"M10,2H14A2,2 0 0,1 16,4V6H20A2,2 0 0,1 22,8V19A2,2 0 0,1 20,21H4C2.89,21 2,20.1 2,19V8C2,6.89 2.89,6 4,6H8V4C8,2.89 8.89,2 10,2M14,6V4H10V6H14Z\" />\n            break\n        case 'contactme':\n            path = <path d=\"M21,8V7L18,9L15,7V8L18,10M22,3H2A2,2 0 0,0 0,5V19A2,2 0 0,0 2,21H22A2,2 0 0,0 24,19V5A2,2 0 0,0 22,3M8,6A3,3 0 0,1 11,9A3,3 0 0,1 8,12A3,3 0 0,1 5,9A3,3 0 0,1 8,6M14,18H2V17C2,15 6,13.9 8,13.9C10,13.9 14,15 14,17M22,12H14V6H22\" />\n            break\n        default:\n            path = \"\"\n    }\n\n    return (\n        <div className=\"menubutton\">\n            <SvgIcon className=\"menuicon\">\n                {path}\n            </SvgIcon>\n            <div className=\"menutext\">\n                <span>\n                    {props.children}\n                </span>\n            </div>\n        </div>\n    )\n}\n\nexport default MenuButton","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport \"./SideMenu.scss\"\nimport MenuButton from '../MenuButton/MenuButton'\n\n\nconst SideMenu = () => {\n\n    return (\n    <div className=\"sideMenu\">\n            <ul id=\"menuLinks\">\n                <li>\n                    <Link to=\"/AlvesPortfolio\">\n                        <MenuButton link=\"aboutme\">\n                            About Me\n                        </MenuButton>\n                    </Link>\n                </li>\n                <li>\n                    <Link to=\"/AlvesPortfolio/projects\">\n                        <MenuButton link=\"projects\">\n                            Projects\n                        </MenuButton>\n                    </Link>\n                </li>\n                <li>\n                    <Link to =\"/AlvesPortfolio/contact\">\n                        <MenuButton link=\"contactme\">\n                            Contact Me\n                        </MenuButton>\n                    </Link>\n                </li>\n            </ul>\n    </div>\n    )\n}\n\nexport default SideMenu","import React from 'react'\nimport './Body.scss'\n\nconst Body = (props) => (\n    <div className=\"body\">\n        <div id=\"window-bar\">\n            <div id=\"window-buttons\">\n                <div id=\"close\"/>\n                <div id=\"maximize\"/>\n                <div id=\"minimize\"/>\n            </div>\n            <div id=\"window-title\">\n                {props.children.className}\n            </div>\n            <div id=\"window-space\"/>\n        </div>\n        <div className=\"text-field\">\n        {props.children}\n        </div>\n    </div>\n)\n\n\nexport default Body","import React, {useState} from 'react'\nimport Typist from 'react-typist'\nimport SvgIcon from '@material-ui/core/SvgIcon'\n\n\nconst AboutMe = () => {\n    const [command, setCommand] = useState(false)\n\n    const commandHandler = () => (\n        setCommand(true)\n    )\n\n    return (\n        <div className=\"textContent\">\n            <div className=\"terminal-header\">\n            pedro@pedro-desktop:~$ \n            </div>\n            <div className=\"terminal-text\">\n\n                <Typist \n                    cursor={{blink: true, element: '_', hideWhenDone:true}}\n                    onTypingDone={commandHandler}>\n                        ./show_about_me.sh\n                </Typist>\n\n                {command ? (\n                <Typist startDelay={1000} stdTypingDelay={0} avgTypingDelay={0} cursor={{blink: false, show: false}}>\n\n                    <p className=\"open\">{\"{\"}</p>\n                \n                    <p className=\"object\">\n                        {\"MyName: Pedro Alves,\"}\n                    </p>\n                    \n                    \n                    <p className=\"object\">\n                        {\"Nationality: Brazilian,\"}\n                    </p>\n                    \n                    \n                    <p className=\"object\">\n                        {\"Skills: [\"}\n                    </p>\n            \n                    <p className=\"array-items\">\n                        {\"Python,\"}\n                    </p>\n\n                    <p className=\"array-items\">\n                        {\"Flask,\"}\n                    </p>\n\n                    <p className=\"array-items\">\n                        {\"Javascript,\"}\n                    </p>\n\n                    <p className=\"array-items\">\n                        {\"React,\"}\n                    </p>\n\n                    <p className=\"array-items\">\n                        {\"HTML,\"}\n                    </p>\n\n                    <p className=\"array-items\">\n                        {\"CSS,\"}\n                    </p>\n\n                    <p className=\"array-close\">\n                        {\"],\"}\n                    </p>\n\n                    <p className=\"object\">\n                        {\"SocialLinks: [\"}\n                    </p>\n\n                    <p className=\"suboject\">\n                        <SvgIcon>\n                            <a href=\"https://www.linkedin.com/in/pedro-alves-73723b113/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                <path d=\"M19,3A2,2 0 0,1 21,5V19A2,2 0 0,1 19,21H5A2,2 0 0,1 3,19V5A2,2 0 0,1 5,3H19M18.5,18.5V13.2A3.26,3.26 0 0,0 15.24,9.94C14.39,9.94 13.4,10.46 12.92,11.24V10.13H10.13V18.5H12.92V13.57C12.92,12.8 13.54,12.17 14.31,12.17A1.4,1.4 0 0,1 15.71,13.57V18.5H18.5M6.88,8.56A1.68,1.68 0 0,0 8.56,6.88C8.56,5.95 7.81,5.19 6.88,5.19A1.69,1.69 0 0,0 5.19,6.88C5.19,7.81 5.95,8.56 6.88,8.56M8.27,18.5V10.13H5.5V18.5H8.27Z\" />\n                            </a>\n                        </SvgIcon>,\n                        <SvgIcon>\n                            <a href=\"https://www.freecodecamp.org/mzord\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                <path d=\"M17.55,11.2C17.32,10.9 17.05,10.64 16.79,10.38C16.14,9.78 15.39,9.35 14.76,8.72C13.3,7.26 13,4.85 13.91,3C13,3.23 12.16,3.75 11.46,4.32C8.92,6.4 7.92,10.07 9.12,13.22C9.16,13.32 9.2,13.42 9.2,13.55C9.2,13.77 9.05,13.97 8.85,14.05C8.63,14.15 8.39,14.09 8.21,13.93C8.15,13.88 8.11,13.83 8.06,13.76C6.96,12.33 6.78,10.28 7.53,8.64C5.89,10 5,12.3 5.14,14.47C5.18,14.97 5.24,15.47 5.41,15.97C5.55,16.57 5.81,17.17 6.13,17.7C7.17,19.43 9,20.67 10.97,20.92C13.07,21.19 15.32,20.8 16.93,19.32C18.73,17.66 19.38,15 18.43,12.72L18.3,12.46C18.1,12 17.83,11.59 17.5,11.21L17.55,11.2M14.45,17.5C14.17,17.74 13.72,18 13.37,18.1C12.27,18.5 11.17,17.94 10.5,17.28C11.69,17 12.39,16.12 12.59,15.23C12.76,14.43 12.45,13.77 12.32,13C12.2,12.26 12.22,11.63 12.5,10.94C12.67,11.32 12.87,11.7 13.1,12C13.86,13 15.05,13.44 15.3,14.8C15.34,14.94 15.36,15.08 15.36,15.23C15.39,16.05 15.04,16.95 14.44,17.5H14.45Z\" />\n                            </a>\n                        </SvgIcon>,\n                        <SvgIcon>\n                            <a href=\"https://www.facebook.com/profile.php?id=100035371863855\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                <path d=\"M5,3H19A2,2 0 0,1 21,5V19A2,2 0 0,1 19,21H5A2,2 0 0,1 3,19V5A2,2 0 0,1 5,3M18,5H15.5A3.5,3.5 0 0,0 12,8.5V11H10V14H12V21H15V14H18V11H15V9A1,1 0 0,1 16,8H18V5Z\" />\n                            </a>\n                        </SvgIcon>\n                    </p>\n                    <p className=\"suboject-close\">\n                        {\"]\"}\n                    </p>\n                    \n                    <p className=\"object\">\n                        {\"Certifications: {\"}\n                    </p>\n                    \n                    <p className=\"suboject\">\n                        {\"Responsive Web Design: FreeCodeCamp.org,\"}\n                    </p>\n                    <p className=\"suboject-close\">{\"}\"}</p>\n                    <p className=\"close\">{\"}\"}</p>\n                </Typist>\n                ) : (\"\")}\n\n            </div>\n        </div>\n    )\n}\n\nexport default AboutMe","import React, {useState} from 'react'\n\n\nconst SubmitButton = (props) => {\n    const [clicked, setClicked] = useState(false)\n    const class_name = [\"notappear\"]\n    const clickHandler = () => {\n        setClicked(true)\n    }\n    const appearHandler = () => {\n        if (props.appear) {\n            class_name.push(\"show\")\n        }\n    }\n    appearHandler()\n    return (\n    <div>\n        {clicked ? <button className={class_name.join(' ')}>Your contact form has been set! Thank you!</button> : <button className={class_name.join(' ')} onClick={clickHandler} type=\"submit\">{props.children}</button>}\n    </div>\n    )\n}\n\nexport default SubmitButton","import React from 'react'\nimport Typist from 'react-typist'\nimport SubmitButton from '../SubmitButton/SubmitButton'\nimport './ContactMe.scss'\n\nclass ContactMe extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            command: false,\n            renderForm: false,\n            name: '',\n            email: '',\n            message: '',\n            submitappear: false,\n            sent: false\n        }\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n    \n    handleEmailChange = (event) => {\n        this.setState({email: event.target.value})\n    }\n\n    handleNameChange = (event) => {\n        this.setState({name: event.target.value})\n    }\n    \n    handleMessageChange = (event) => {\n        this.setState({message: event.target.value})\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault()\n        this.setState({\n            sent: true\n        })\n        const user = {\"username\": process.env.REACT_APP_USER, \"password\": process.env.REACT_APP_PASS}\n        const options = {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Access-Control-Allow-Origin':'*'\n            },\n            mode: \"cors\",\n            body: JSON.stringify({\n                \"username\": user.username,\n                \"password\": user.password\n            }),\n        }\n        const auth = await fetch(\"https://portpage-api.herokuapp.com/auth\", options)\n        const auth_response = await auth.json()\n        const token = await auth_response.access_token\n        const contact_options = {\n            method: \"POST\",\n            headers: {\n                'Access-Control-Allow-Origin':'*',\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": \"JWT \" + token\n            },\n            mode: \"cors\",\n            body: JSON.stringify({\"name\": this.state.name, \"email\": this.state.email, \"message\": this.state.message})\n        }\n        // eslint-disable-next-line\n        const contact = await fetch(\"https://portpage-api.herokuapp.com/contact\", contact_options)\n        }    \n\n    render() {\n\n    const commandHandler = () => {\n        this.setState({command: true})\n    }\n\n    const formHandler = () => {\n        this.setState({command: false, renderForm: true})\n    }\n    \n    const submitAppear = () => {\n        this.setState({\n            submitappear: true\n        })\n    }\n    \n    const form = \n        <div>\n            <Typist onTypingDone={submitAppear} stdTypingDelay={0} avgTypingDelay={0} cursor={{show: false}}>\n                <p className=\"open\">Your Name:</p>\n                <input onChange={this.handleNameChange} type=\"text\"/>\n                <p className=\"open\">Your Email:</p>\n                <input onChange={this.handleEmailChange} type=\"text\"/>\n                <p className=\"open\">Message:</p>\n            </Typist>\n            <textarea onChange={this.handleMessageChange} name=\"message\" defaultValue=\"\" />\n            <SubmitButton onClick={this.handleSubmit} appear={this.state.submitappear}>Submit</SubmitButton>\n        </div>\n    \n    return (\n        <div className=\"textContent\">\n            <div className=\"terminal-header\">\n                pedro@pedro-desktop:~$ \n            </div>\n            <div className=\"terminal-text\">\n                <Typist cursor={{blink: true, element: '_', hideWhenDone:true}}\n                    onTypingDone={commandHandler}>./render-contact-form.py\n                </Typist>\n                {this.state.command ? \n                (<Typist onTypingDone={formHandler} startDelay={500} cursor={{show: false}} avgTypingDelay={300} stdTypingDelay={0} >\n                <p className=\"open\">.....</p>\n                </Typist>) : (\"\")}\n            </div>\n            {this.state.renderForm ? \n            <form onSubmit={this.handleSubmit}>\n                {form}\n            </form> : \"\"}\n            \n        </div>\n    )\n}\n}\n\nexport default ContactMe","import React, {useState} from 'react'\nimport Typist from 'react-typist'\n\nconst Projects = () => {\n\n    const [command, setCommand] = useState(false)\n\n    const commandHandler = () => (\n        setCommand(true)\n        )\n\n    return (\n        <div className=\"textContent\">\n            \n            <div className=\"terminal-header\">\n            pedro@pedro-desktop:~$ \n            </div>\n            <div className=\"terminal-text\">\n                <Typist \n                    cursor={{blink: true, element: '_', hideWhenDone:true}}\n                    onTypingDone={commandHandler}>\n                        ./show_my_projects.sh \n                </Typist>\n\n                {command ? (\n                <Typist startDelay={1000} stdTypingDelay={0} avgTypingDelay={1} cursor={{blink: false, show: false}}>\n\n                <p className=\"open\">{\"{\"}</p>\n\n                <p className=\"object\">\n                    This Portfolio: <a href=\"https://github.com/mzord/AlvesPortfolio\" rel=\"noopener noreferrer\" target=\"_blank\">http://tiny.cc/3xrg8y</a>\n                </p>\n\n                <p className=\"object\">\n                    This Portfolio API: <a href=\"http://tiny.cc/nwrg8y\" rel=\"noopener noreferrer\" target=\"_blank\">http://tiny.cc/nwrg8y</a>\n                </p>\n\n                <p className=\"close\">\n                    {\"}\"}\n                </p>\n                </Typist>) : (\"\")}\n                \n            </div>\n        </div>\n            \n\n    )\n}\n\nexport default Projects","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport './App.css';\nimport Header from './component/Header/Header'\nimport SideMenu from './component/SideMenu/SideMenu'\nimport Body from './component/Body/Body'\nimport AboutMe from './component/AboutMe/AboutMe';\nimport ContactMe from './component/ContactMe/ContactMe';\nimport Projects from './component/Projects/Projects';\nimport {CSSTransition, TransitionGroup} from 'react-transition-group'\n\n\nconst App = () => {\n    return (\n      <Router>\n      <div className=\"App\">\n          <Header />\n            <div className=\"content\">\n              <SideMenu />\n                    <Body>\n                    <Route render={({location}) => (\n                      <TransitionGroup> \n                      <CSSTransition\n                        key={location.key}\n                        timeout={300}\n                        classNames=\"textContent\">\n    \n                          <Switch location={location}>\n                            <Route exact path=\"/AlvesPortfolio\" component={AboutMe} />\n                            <Route exact path={process.env.PUBLIC_URL + '/'} component={AboutMe} />\n                            <Route path=\"/AlvesPortfolio/contact\" component={ContactMe} />\n                            <Route path=\"/AlvesPortfolio/projects\" component={Projects} />\n                          </Switch>\n\n                      </CSSTransition>\n                    </TransitionGroup>\n                    )} />\n                    </Body>             \n            </div>\n        </div>\n      </Router>\n    )\n  }\n\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}